import de.sebastianboegl.gradle.plugins.shadow.transformers.Log4j2PluginsFileTransformer

buildscript {
	repositories {
		maven {
			url 'https://plugins.gradle.org/m2/'
		}
	}
	dependencies {
		classpath 'de.sebastianboegl.gradle.plugins:shadow-log4j-transformer:2.2.0'
	}
}

plugins {
	id 'de.fntsoftware.gradle.markdown-to-pdf' version '1.0.1'
}

apply plugin: 'java'
apply plugin: 'maven'

// we don't want to cause conflicts between our dependencies and the target application
// since the agent will be loaded with the same class loader as the profiled application
// so we use plugin-shadow instead of shadow to relocate all of our dependencies
apply plugin: 'com.github.johnrengelman.plugin-shadow'

group 'eu.cqse'
version pluginVersion

ext {
    outputVersion = rootProject.appVersion + '-jacoco-' + jacocoVersion
}

jar {
	classifier = null
	manifest {
		attributes 'Premain-Class': 'com.teamscale.jacoco.agent.PreMain'
	}
}

dependencies {
    implementation "org.jacoco:org.jacoco.core:$jacocoVersion"
    implementation "org.jacoco:org.jacoco.report:$jacocoVersion"
    implementation "org.jacoco:org.jacoco.agent:$jacocoVersion:runtime"

    implementation "org.apache.logging.log4j:log4j-api:$log4jVersion"
    implementation "org.apache.logging.log4j:log4j-core:$log4jVersion"

    implementation 'io.reactivex.rxjava2:rxjava:2.1.2'
    compileOnly 'com.beust:jcommander:1.71'
    compileOnly 'org.conqat:org.conqat.lib.commons:0.20160822'

    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.sparkjava:spark-core:2.7.2'

	implementation 'com.google.code.gson:gson:2.8.5'

	implementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.2.0'
	compileOnly group: 'org.junit.platform', name: 'junit-platform-launcher', version: '1.2.0'
	compileOnly group: 'org.junit.platform', name: 'junit-platform-engine', version: '1.2.0'
	compileOnly group: 'org.junit.platform', name: 'junit-platform-console', version: '1.2.0'

	compile group: 'org.ow2.asm', name: 'asm', version: '6.2.1'

	compile group: 'junit', name: 'junit', version: '4.12'
	compile group: 'org.testng', name: 'testng', version: '6.11'

	implementation 'com.squareup.retrofit2:retrofit:2.4.0'
	implementation 'com.squareup.retrofit2:converter-scalars:2.4.0'
	implementation project(':teamscale-client')
    implementation project(':report-generator')

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.assertj:assertj-core:3.8.0'

	testRuntime("org.junit.vintage:junit-vintage-engine:4.12.3")
}

configurations {
	testImplementation.extendsFrom compileOnly
}

shadowJar {
	baseName = 'teamscale-jacoco-agent'
	classifier = null
	// since this is used as an agent, we want it to always have the same name
	// otherwise people have to adjust their -javaagent parameters after every
	// update
	version = null
	manifest {
		attributes 'Premain-Class': 'com.teamscale.jacoco.agent.PreMain'

		// The jaxb library, which we are shading is a multi release jar, so we have to explicitly "inherit" this attribute
		attributes 'Multi-Release': 'true'
	}

	// Don't relocate our own code
	// The plugin-shadow plugin by default relocates all packages to shadow.* and we are overriding this here
	relocate 'eu.cqse', 'eu.cqse'

	// Fix relocation of multi version jar
	// Default would be shadow/META-INF/versions/9/, which is wrong
	// See http://openjdk.java.net/jeps/238
	relocate 'META-INF/versions/9/', 'META-INF/versions/9/shadow/'

	// ensures that log4j resource files are also relocated properly
	transform(Log4j2PluginsFileTransformer)
	transform(Log4JResourceTransformer)
	mergeServiceFiles()
}

processResources {
    filesMatching('**/app.properties') {
        filter {
            it.replace('%APP_VERSION_TOKEN_REPLACED_DURING_BUILD%', rootProject.appVersion)
        }
    }
}
